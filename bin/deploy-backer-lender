#!/usr/bin/env bash
set -ex

BIN_DIR=${BIN_DIR:-$(cd "${0%/*}"&&pwd)}
ADDRESS_DIR=${ADDRESS_DIR:-$PWD/addresses}
mkdir -p $ADDRESS_DIR

export ETH_GAS=${ETH_GAS:-"7000000"}
export ETH_FROM=${ETH_FROM:-$(seth rpc eth_coinbase)}
export SOLC_FLAGS="--optimize"

test -z "$SKIP_BUILD" && dapp build --extract

if [[ -z "$BACKER_ADDR" ]]; then
    BACKER_ADDR="0x00000000000000000000000000000000000000000000"
fi

LENDER_FAB=$(dapp create BackerFab $BACKER_ADDR)

$(seth send $DEPLOYER 'deployLender(address, address)' $CURRENCY $LENDER_FAB)
LENDER=0x$(seth call $DEPLOYER 'lender()(address)')
$(seth send $DESK 'file(bytes32,address)' "$(seth --to-bytes32 "$(seth --from-ascii "lender")")" $LENDER)
$(seth send $LENDER 'rely(address)' $DESK)

if [[ -n "$BACKER_ETH_FROM" ]]; then
    seth send $CURRENCY 'approve(address,uint)' $LENDER $(seth --to-int256 -1) --keystore=$BACKER_ETH_KEYSTORE --password=$BACKER_ETH_PASSWORD --from=$BACKER_ETH_FROM
    seth send $COLLATERAL 'approve(address,uint)' $LENDER $(seth --to-int256 -1) --keystore=$BACKER_ETH_KEYSTORE --password=$BACKER_ETH_PASSWORD --from=$BACKER_ETH_FROM
fi


source $BIN_DIR/lib/load-addresses
touch "$ADDRESS_DIR/addresses-$(seth chain).json"
addAddresses "$ADDRESS_DIR/addresses-$(seth chain).json" <<EOF
{
    "LENDER_FAB": "$LENDER_FAB",
    "LENDER"    : "$LENDER"
}
EOF
